// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders without crashing 1`] = `
<div
  className="out_border"
>
  <input
    onClick={[Function]}
    type="button"
    value="Velcom"
  />
  <input
    onClick={[Function]}
    type="button"
    value="MTS"
  />
  <p>
    Компания 
    Velcom
  </p>
  <hr />
  <input
    id={1}
    onClick={[Function]}
    type="button"
    value="Все"
  />
  <input
    id={2}
    onClick={[Function]}
    type="button"
    value="Активные"
  />
  <input
    id={3}
    onClick={[Function]}
    type="button"
    value="Заблокированные"
  />
  <hr />
  <table>
    <tbody>
      <tr>
        <th>
          Иван
        </th>
        <th>
          Краснов
        </th>
        <th>
          Сергеевич
        </th>
        <th>
          200
        </th>
        <th
          className="active_client"
        >
          active_client
        </th>
        <th>
          <input
            onClick={[Function]}
            type="button"
            value="Редактировть"
          />
        </th>
        <th>
          <input
            onClick={[Function]}
            type="button"
            value="Удалить"
          />
        </th>
      </tr>
    </tbody>
    <tbody>
      <tr>
        <th>
          Сергей
        </th>
        <th>
          Зайцев
        </th>
        <th>
          Владимирович
        </th>
        <th>
          250
        </th>
        <th
          className="active_client"
        >
          active_client
        </th>
        <th>
          <input
            onClick={[Function]}
            type="button"
            value="Редактировть"
          />
        </th>
        <th>
          <input
            onClick={[Function]}
            type="button"
            value="Удалить"
          />
        </th>
      </tr>
    </tbody>
    <tbody>
      <tr>
        <th>
          Мария
        </th>
        <th>
          Иванова
        </th>
        <th>
          Александровна
        </th>
        <th>
          -10
        </th>
        <th
          className="blocked_client"
        >
          blocked_client
        </th>
        <th>
          <input
            onClick={[Function]}
            type="button"
            value="Редактировть"
          />
        </th>
        <th>
          <input
            onClick={[Function]}
            type="button"
            value="Удалить"
          />
        </th>
      </tr>
    </tbody>
    <tbody>
      <tr>
        <th>
          Борис
        </th>
        <th>
          Смирнов
        </th>
        <th>
          Геннадьевич
        </th>
        <th>
          50
        </th>
        <th
          className="active_client"
        >
          active_client
        </th>
        <th>
          <input
            onClick={[Function]}
            type="button"
            value="Редактировть"
          />
        </th>
        <th>
          <input
            onClick={[Function]}
            type="button"
            value="Удалить"
          />
        </th>
      </tr>
    </tbody>
  </table>
  <input
    onClick={[Function]}
    type="button"
    value="Добавить клиента"
  />
  <br />
  <br />
</div>
`;

exports[`renders without crashing 2`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "clients": Array [
        Object {
          "balance": 200,
          "id": 101,
          "nameClient": "Иван",
          "secondNameClient": "Сергеевич",
          "serNameClient": "Краснов",
        },
        Object {
          "balance": 250,
          "id": 105,
          "nameClient": "Сергей",
          "secondNameClient": "Владимирович",
          "serNameClient": "Зайцев",
        },
        Object {
          "balance": -10,
          "id": 1215,
          "nameClient": "Мария",
          "secondNameClient": "Александровна",
          "serNameClient": "Иванова",
        },
        Object {
          "balance": 50,
          "id": 589,
          "nameClient": "Борис",
          "secondNameClient": "Геннадьевич",
          "serNameClient": "Смирнов",
        },
      ],
      "name": "Velcom",
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "clients": Array [
          Object {
            "balance": 200,
            "id": 101,
            "nameClient": "Иван",
            "secondNameClient": "Сергеевич",
            "serNameClient": "Краснов",
          },
          Object {
            "balance": 250,
            "id": 105,
            "nameClient": "Сергей",
            "secondNameClient": "Владимирович",
            "serNameClient": "Зайцев",
          },
          Object {
            "balance": -10,
            "id": 1215,
            "nameClient": "Мария",
            "secondNameClient": "Александровна",
            "serNameClient": "Иванова",
          },
          Object {
            "balance": 50,
            "id": 589,
            "nameClient": "Борис",
            "secondNameClient": "Геннадьевич",
            "serNameClient": "Смирнов",
          },
        ],
        "name": "Velcom",
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`renders without crashing 3`] = `
<div
  className="out_border"
>
  <input
    onClick={[Function]}
    type="button"
    value="Velcom"
  />
  <input
    onClick={[Function]}
    type="button"
    value="MTS"
  />
  <p>
    Компания 
    Velcom
  </p>
  <hr />
  <input
    id={1}
    onClick={[Function]}
    type="button"
    value="Все"
  />
  <input
    id={2}
    onClick={[Function]}
    type="button"
    value="Активные"
  />
  <input
    id={3}
    onClick={[Function]}
    type="button"
    value="Заблокированные"
  />
  <hr />
  <table>
    <tbody>
      <tr>
        <th>
          Иван
        </th>
        <th>
          Краснов
        </th>
        <th>
          Сергеевич
        </th>
        <th>
          200
        </th>
        <th
          className="active_client"
        >
          active_client
        </th>
        <th>
          <input
            onClick={[Function]}
            type="button"
            value="Редактировть"
          />
        </th>
        <th>
          <input
            onClick={[Function]}
            type="button"
            value="Удалить"
          />
        </th>
      </tr>
    </tbody>
    <tbody>
      <tr>
        <th>
          Сергей
        </th>
        <th>
          Зайцев
        </th>
        <th>
          Владимирович
        </th>
        <th>
          250
        </th>
        <th
          className="active_client"
        >
          active_client
        </th>
        <th>
          <input
            onClick={[Function]}
            type="button"
            value="Редактировть"
          />
        </th>
        <th>
          <input
            onClick={[Function]}
            type="button"
            value="Удалить"
          />
        </th>
      </tr>
    </tbody>
    <tbody>
      <tr>
        <th>
          Мария
        </th>
        <th>
          Иванова
        </th>
        <th>
          Александровна
        </th>
        <th>
          -10
        </th>
        <th
          className="blocked_client"
        >
          blocked_client
        </th>
        <th>
          <input
            onClick={[Function]}
            type="button"
            value="Редактировть"
          />
        </th>
        <th>
          <input
            onClick={[Function]}
            type="button"
            value="Удалить"
          />
        </th>
      </tr>
    </tbody>
    <tbody>
      <tr>
        <th>
          Борис
        </th>
        <th>
          Смирнов
        </th>
        <th>
          Геннадьевич
        </th>
        <th>
          50
        </th>
        <th
          className="active_client"
        >
          active_client
        </th>
        <th>
          <input
            onClick={[Function]}
            type="button"
            value="Редактировть"
          />
        </th>
        <th>
          <input
            onClick={[Function]}
            type="button"
            value="Удалить"
          />
        </th>
      </tr>
    </tbody>
  </table>
  <input
    onClick={[Function]}
    type="button"
    value="Добавить клиента"
  />
  <br />
  <br />
</div>
`;
